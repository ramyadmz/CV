{"version":3,"sources":["components/FullPage.js","components/ScrollDown.js","sections/FirstPage.js","sections/About.js","components/ScrollToTop.js","sections/Skills.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["FullPage","children","this","props","className","Component","ScrollDown","activeClass","to","destination","spy","smooth","class","FirstPage","id","name","data","items","title","subtitle","Object","keys","links","map","key","icon","url","About","AboutPage","text","ScrollToTop","Skills","SkillsPage","skill","src","image","alt","NavigationBar","href","onClick","changeTheme","icons","general","theme","App","state","bind","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce781059.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./FullPage.css\";\r\nclass FullPage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className={`fullpage ${this.props.className || \"\"} `}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./ScrollDown.css\";\r\n\r\nclass ScrollDown extends Component {\r\n  render() {\r\n    return (\r\n      <Link\r\n        activeClass=\"active\"\r\n        to={this.props.destination}\r\n        spy={true}\r\n        smooth={true}\r\n      >\r\n        <div class=\"mouse_scroll\">\r\n          <div class=\"mouse\">\r\n            <div class=\"wheel\"></div>\r\n          </div>\r\n          <div>\r\n            <span class=\"m_scroll_arrows unu\"></span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollDown;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport ScrollDown from \"../components/ScrollDown\";\r\nimport { Element } from \"react-scroll\";\r\nimport { SocialMediaIconsReact } from \"social-media-icons-react\";\r\nimport \"./FirstPage.css\";\r\nimport \"./theme.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass FirstPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element id=\"home\" name=\"home\">\r\n          <FullPage>\r\n            <h1 className=\"palete2 heading\">{data.FirstPage.items.title}</h1>\r\n            <div>\r\n              <h3 className=\"palete3 heading\">\r\n                {data.FirstPage.items.subtitle}\r\n              </h3>\r\n            </div>\r\n            <div className=\"icons-wrapper\">\r\n              {Object.keys(data.FirstPage.items.links).map((key) => {\r\n                return (\r\n                  <div className=\"icon\">\r\n                    <SocialMediaIconsReact\r\n                      icon={key}\r\n                      url={data.FirstPage.items.links[key]}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </FullPage>\r\n        </Element>\r\n        <ScrollDown destination=\"about\"></ScrollDown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FirstPage;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport ScrollDown from \"../components/ScrollDown\";\r\nimport { Element } from \"react-scroll\";\r\nimport \"./About.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element id=\"about\" name=\"about\">\r\n          <FullPage>\r\n            <h1 className=\"palete2 heading\">{data.AboutPage.items.title}</h1>\r\n            <div>\r\n              <p className=\"palete3 text\">{data.AboutPage.items.text}</p>\r\n            </div>\r\n          </FullPage>\r\n        </Element>\r\n        <ScrollDown destination=\"skills\"></ScrollDown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./ScrollToTop.css\";\r\n\r\nclass ScrollToTop extends Component {\r\n  render() {\r\n    return (\r\n      <Link activeClass=\"active\" to=\"home\" spy={true} smooth={true}>\r\n        <div class=\"mouse_scroll\">\r\n          <div>\r\n            <span class=\"m_scroll_arrows_top unu\"></span>\r\n            <span class=\"m_scroll_arrows_top doi\"></span>\r\n            <span class=\"m_scroll_arrows_top trei\"></span>\r\n          </div>\r\n          <div class=\"mouse\">\r\n            <div class=\"wheel\"></div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollToTop;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport { Element } from \"react-scroll\";\r\nimport ScrollToTop from \"../components/ScrollToTop\";\r\nimport \"./Skills.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element id=\"skills\" name=\"Skills\">\r\n          <FullPage>\r\n            <div className=\"skill-list\">\r\n              {data.SkillsPage.items.map((skill) => {\r\n                return (\r\n                  <div className=\"card\">\r\n                    <h4 className=\"skill-title palete2\">{skill.title}</h4>\r\n                    <img\r\n                      className=\"skill-icon\"\r\n                      src={`https://icongr.am/devicon/${skill.image}-original.svg?size=64`}\r\n                      alt=\"skill.title\"\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </FullPage>\r\n        </Element>\r\n        <ScrollToTop></ScrollToTop>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skills;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./NavigationBar.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nav\">\r\n        <div className=\"navlist\">\r\n          <ul>\r\n            <li>\r\n              <Link activeClass=\"active\" to=\"home\" spy={true} smooth={true}>\r\n                <a href=\"\">home</a>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true}>\r\n                <a href=\"\">about</a>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true}>\r\n                <a href=\"\">Skills</a>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"themebox\">\r\n          <img\r\n            onClick={() => {\r\n              this.props.changeTheme();\r\n            }}\r\n            className=\"themeicon\"\r\n            src={data.icons.general.theme}\r\n            alt=\"change theme\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\nimport FirstPage from \"./sections/FirstPage\";\nimport About from \"./sections/About\";\nimport Skills from \"./sections/Skills\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport \"./App.css\";\nimport \"./components/NavigationBar.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      theme: `themeI`,\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n  changeTheme() {\n    this.setState({\n      theme:\n        this.state.theme === `themeIII` ? `themeI` : this.state.theme + `I`,\n    });\n  }\n  render() {\n    return (\n      <div className={this.state.theme}>\n        <NavigationBar\n          changeTheme={this.changeTheme.bind(this)}\n        ></NavigationBar>\n        <FirstPage />\n        <About />\n        <Skills />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}