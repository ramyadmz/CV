{"version":3,"sources":["components/FullPage.js","components/ScrollDown.js","sections/FirstPage.js","sections/About.js","components/ScrollToTop.js","sections/Skills.js","components/NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["FullPage","children","this","props","className","Component","ScrollDown","activeClass","to","destination","spy","smooth","href","class","FirstPage","id","name","data","items","title","subtitle","Object","keys","links","map","key","icon","url","About","AboutPage","text","ScrollToTop","Skills","SkillsPage","skill","src","image","alt","NavigationBar","onClick","changeTheme","icons","general","theme","App","state","bind","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd45fcb0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./FullPage.css\";\r\nclass FullPage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div className={`fullpage ${this.props.className || \"\"} `}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FullPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./ScrollDown.css\";\r\n\r\nclass ScrollDown extends Component {\r\n  render() {\r\n    return (\r\n      <Link\r\n        activeClass=\"active\"\r\n        to={this.props.destination}\r\n        spy={true}\r\n        smooth={true}\r\n      >\r\n        <a href=\"\">\r\n          <div class=\"mouse_scroll\">\r\n            <div class=\"mouse\">\r\n              <div class=\"wheel\"></div>\r\n            </div>\r\n            <div>\r\n              <span class=\"m_scroll_arrows unu\"></span>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollDown;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport ScrollDown from \"../components/ScrollDown\";\r\nimport { Element } from \"react-scroll\";\r\nimport { SocialMediaIconsReact } from \"social-media-icons-react\";\r\nimport \"./FirstPage.css\";\r\nimport \"./theme.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass FirstPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element id=\"home\" name=\"home\">\r\n          <FullPage>\r\n            <h1 className=\"palete2 heading\">{data.FirstPage.items.title}</h1>\r\n            <div>\r\n              <p className=\"palete3 heading\">\r\n                {data.FirstPage.items.subtitle} \r\n              </p>\r\n            </div>\r\n            <div className=\"icons-wrapper\">\r\n              {Object.keys(data.FirstPage.items.links).map((key) => {\r\n                return (\r\n                  <div className=\"icon\">\r\n                    <SocialMediaIconsReact\r\n                      icon={key}\r\n                      url={data.FirstPage.items.links[key]}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </FullPage>\r\n        </Element>\r\n        <ScrollDown destination=\"about\"></ScrollDown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FirstPage;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport ScrollDown from \"../components/ScrollDown\";\r\nimport { Element } from \"react-scroll\";\r\nimport \"./About.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element id=\"about\" name=\"about\">\r\n          <FullPage>\r\n            <h1 className=\"palete2 heading\">{data.AboutPage.items.title}</h1>\r\n            <div>\r\n              <p className=\"palete3 text\">{data.AboutPage.items.text}</p>\r\n            </div>\r\n          </FullPage>\r\n        </Element>\r\n        <ScrollDown destination=\"skills\"></ScrollDown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./ScrollToTop.css\";\r\n\r\nclass ScrollToTop extends Component {\r\n  render() {\r\n    return (\r\n      <Link activeClass=\"active\" to=\"home\" spy={true} smooth={true}>\r\n        <a href=\"\">\r\n          <div class=\"mouse_scroll\">\r\n            <div>\r\n              <span class=\"m_scroll_arrows_top unu\"></span>\r\n              <span class=\"m_scroll_arrows_top doi\"></span>\r\n              <span class=\"m_scroll_arrows_top trei\"></span>\r\n            </div>\r\n            <div class=\"mouse\">\r\n              <div class=\"wheel\"></div>\r\n            </div>\r\n          </div>\r\n        </a>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScrollToTop;\r\n","import React, { Component } from \"react\";\r\nimport FullPage from \"../components/FullPage\";\r\nimport { Element } from \"react-scroll\";\r\nimport ScrollToTop from \"../components/ScrollToTop\";\r\nimport \"./Skills.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element id=\"skills\" name=\"Skills\">\r\n          <FullPage>\r\n            <div className=\"skill-list\">\r\n              {data.SkillsPage.items.map((skill) => {\r\n                return (\r\n                  <div className=\"card\">\r\n                    <h4 className=\"skill-title palete2\">{skill.title}</h4>\r\n                    <img\r\n                      className=\"skill-icon\"\r\n                      src={`https://icongr.am/devicon/${skill.image}-original.svg?size=64`}\r\n                      alt=\"skill.title\"\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </FullPage>\r\n        </Element>\r\n        <ScrollToTop></ScrollToTop>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skills;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-scroll\";\r\nimport \"./NavigationBar.css\";\r\nimport data from \"../data.json\";\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"nav\">\r\n        <div className=\"navlist\">\r\n          <ul>\r\n            <li>\r\n              <Link activeClass=\"active\" to=\"home\" spy={true} smooth={true}>\r\n                <a href=\"\">home</a>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true}>\r\n                <a href=\"\">about</a>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true}>\r\n                <a href=\"\">Skills</a>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"themebox\">\r\n          \r\n              <img\r\n                onClick={() => {\r\n                  this.props.changeTheme();\r\n                }}\r\n                className=\"themeicon\"\r\n                src={data.icons.general.theme}\r\n                alt=\"change theme\"\r\n              />\r\n            \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\r\nimport FirstPage from \"./sections/FirstPage\";\r\nimport About from \"./sections/About\";\r\nimport Skills from \"./sections/Skills\";\r\nimport NavigationBar from \"./components/NavigationBar\";\r\nimport \"./App.css\";\r\nimport \"./components/NavigationBar.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      theme: `themeI`,\r\n    };\r\n    this.changeTheme = this.changeTheme.bind(this);\r\n  }\r\n  changeTheme() {\r\n    this.setState({\r\n      theme:\r\n        this.state.theme === `themeIIII` ? `themeI` : this.state.theme + `I`,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={this.state.theme}>\r\n        <NavigationBar\r\n          changeTheme={this.changeTheme.bind(this)}\r\n        ></NavigationBar>\r\n        <FirstPage />\r\n        <About />\r\n        <Skills />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}